# Define all test suites in this file here (by adding a new section).

# [test_suite_name]: The name of your test suite. Use this exact name on the
#   command line when running cli.py suite:run [test_suite_name]. Do not replace
#   "_" with "-".
# base_dir: The directory inside the ray repository, in which to operate. Files
#   used in `exec_cmd` (e.g. run.sh) should be located here.
# cluster_config: The path+filename of the cluster yaml config to use to bring
#   up a ray cluster. The path is relative to the `base_dir` above.
# exec_cmd: The actual command to run (on the created cluster).

# ---------------------------------------------------
# Regular job
# ---------------------------------------------------
[microbenchmark]
base_dir = "release/microbenchmark"
cluster_config = "cluster.yaml"
exec_cmd = """unset RAY_ADDRESS && OMP_NUM_THREADS=64 ray microbenchmark"""


# ---------------------------------------------------
# Release tests.
# ---------------------------------------------------
[long_running_tests]
base_dir = "release/long_running_tests"
cluster_config = "cluster.yaml"
exec_cmd = """
bash run.sh --ray-version={{ctx["ray_version"]}} \
            --commit={{ctx["git_commit"]}} \
            --ray-branch={{ctx["git_branch"]}} \
            --workload={{ctx["workload"]}}
"""

    [[long_running_tests.case]]
    workload = "serve"

    [[long_running_tests.case]]
    workload = "serve_failure"

    [[long_running_tests.case]]
    workload = "many_tasks"

    [[long_running_tests.case]]
    workload = "actor_deaths"

    [[long_running_tests.case]]
    workload = "apex"
    cluster_config = "larger.yaml"

    [[long_running_tests.case]]
    workload = "impala"
    cluster_config = "larger.yaml"

    [[long_running_tests.case]]
    workload = "many_actor_tasks"

    [[long_running_tests.case]]
    workload = "many_drivers"

    [[long_running_tests.case]]
    cluster_config = "threenode.yaml"
    workload = "many_ppo"

    [[long_running_tests.case]]
    workload = "many_tasks_serialized_ids"

    [[long_running_tests.case]]
    workload = "node_failures"

    [[long_running_tests.case]]
    workload = "pbt"


[long_running_distributed]
base_dir = "release/long_running_distributed_tests"
cluster_config = "cluster.yaml"
exec_cmd = "python workloads/{{ctx['workload']}}.py"

    [[long_running_distributed.case]]
    workload = "pytorch_pbt_failure"

[horovod]
base_dir = "release/horovod_tests"
cluster_config = "cluster.yaml"
exec_cmd = "python ../util/wait_cluster.py 3 600 && python workloads/{{ctx['workload']}}.py"

    [[horovod.case]]
    workload = "horovod_test"

# ---------------------------------------------------
# Stress tests.
# ---------------------------------------------------
[stress_tests]
base_dir = "release/stress_tests"
cluster_config = "cluster.yaml"
exec_cmd = """
bash run.sh --ray-version={{ctx["ray_version"]}} \
            --commit={{ctx["git_commit"]}} \
            --ray-branch={{ctx["git_branch"]}} \
            --workload={{ctx["workload"]}}
"""

    [[stress_tests.case]]
    workload = "test_dead_actors"

    [[stress_tests.case]]
    workload = "test_many_tasks"

    # [[stress_tests.case]]
    # workload = "test_placement_group"

# ---------------------------------------------------
# ASAN tests.
# ---------------------------------------------------
[asan_tests]
base_dir = "release/asan_tests"
cluster_config = "cluster.yaml"
exec_cmd = """bash run_asan_tests.sh {{ctx["git_branch"]}} {{ctx["git_commit"]}}"""


# ---------------------------------------------------
# Serve tests.
# ---------------------------------------------------
[serve]
base_dir = "python/ray/serve/benchmarks"
cluster_config = "single.yaml"
exec_cmd = """
python {{ctx["workload"]}}.py
"""
    # skipping due to hanging
    # [[serve.case]]
    # workload = "handle"

    [[serve.case]]
    workload = "microbenchmark"

[serve-cluster]
base_dir = "python/ray/serve/benchmarks"
cluster_config = "cluster.yaml"
exec_cmd = """
python scalability.py
"""

# ---------------------------------------------------
# Tune tests.
# ---------------------------------------------------
[tune_scalability_tests]
base_dir = "release/tune_tests/scalability_tests"
cluster_config = "cluster_1x16.yaml"
exec_cmd = """python ../../util/wait_cluster.py {{ctx["nodes"]}} 600 && python workloads/{{ctx["workload"]}}.py"""

    [[tune_scalability_tests.case]]
    cluster_config = "cluster_1x16.yaml"
    nodes = 1
    workload = "test_bookkeeping_overhead"

    [[tune_scalability_tests.case]]
    cluster_config = "cluster_16x64.yaml"
    nodes = 16
    workload = "test_result_throughput_cluster"

    [[tune_scalability_tests.case]]
    cluster_config = "cluster_1x96.yaml"
    nodes = 1
    workload = "test_result_throughput_single_node"

    [[tune_scalability_tests.case]]
    cluster_config = "cluster_200x2.yaml"
    nodes = 200
    workload = "test_network_overhead"

    [[tune_scalability_tests.case]]
    cluster_config = "cluster_1x32_hd.yaml"
    nodes = 1
    workload = "test_long_running_large_checkpoints"

    [[tune_scalability_tests.case]]
    cluster_config = "cluster_16x64_data.yaml"
    nodes = 16
    workload = "test_xgboost_sweep"

    [[tune_scalability_tests.case]]
    cluster_config = "cluster_16x2.yaml"
    nodes = 16
    workload = "test_durable_trainable"


# ---------------------------------------------------
# RLlib tests.
# ---------------------------------------------------
[rllib_regression_tests]
base_dir = "release/rllib_tests/regression_tests"
cluster_config = "cluster.yaml"
exec_cmd = """bash {{ctx["workload"]}}.sh"""

    [[rllib_regression_tests.case]]
    workload = "run_tf"

    [[rllib_regression_tests.case]]
    workload = "run_torch"


[rllib_stress_tests]
base_dir = "release/rllib_tests/stress_tests"
cluster_config = "cluster.yaml"
exec_cmd = """bash run.sh"""


[rllib_unit_gpu_tests]
base_dir = "release/rllib_tests/unit_gpu_tests"
cluster_config = "cluster.yaml"
exec_cmd = """bash run.sh {{ctx["git_commit"]}}"""


# ---------------------------------------------------
# XGBoost tests.
# ---------------------------------------------------
[xgboost_tests]
base_dir = "release/xgboost_tests"
cluster_config = "cluster_cpu_small.yaml"
exec_cmd = """python ../util/wait_cluster.py {{ctx["nodes"]}} 600 && python workloads/{{ctx["workload"]}}.py"""

    [[xgboost_tests.case]]
    cluster_config = "cluster_cpu_small.yaml"
    nodes = 4
    workload = "distributed_api_test"

    [[xgboost_tests.case]]
    cluster_config = "cluster_cpu_small.yaml"
    nodes = 4
    workload = "train_small"

    [[xgboost_tests.case]]
    cluster_config = "cluster_cpu_small.yaml"
    nodes = 4
    workload = "tune_small"

    [[xgboost_tests.case]]
    cluster_config = "cluster_cpu_small.yaml"
    nodes = 4
    workload = "ft_small_non_elastic"

    [[xgboost_tests.case]]
    cluster_config = "cluster_cpu_small.yaml"
    nodes = 4
    workload = "ft_small_elastic"

    [[xgboost_tests.case]]
    cluster_config = "cluster_cpu_moderate.yaml"
    nodes = 32
    workload = "train_moderate"

    [[xgboost_tests.case]]
    cluster_config = "cluster_cpu_moderate.yaml"
    nodes = 32
    workload = "tune_4x32"

    [[xgboost_tests.case]]
    cluster_config = "cluster_cpu_moderate.yaml"
    nodes = 32
    workload = "tune_32x4"

    [[xgboost_tests.case]]
    cluster_config = "cluster_gpu_small.yaml"
    nodes = 5
    workload = "train_gpu"
